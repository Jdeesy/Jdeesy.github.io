---
title: Array vs. Hash
---

<div class="jumbotron">
  <div class="titlearea">
    <div class="title">
      <h1>Understanding an Array and Hash</h1>
      <!--<h2> </h2> -->
      <h4>January 24, 2015</h4>
    </div>
  </div>


  <p>
  In Ruby, arrays and hashes are very similar. Both are used to store and retrieve data. What makes them different is how you program them, and how they store and retrieve the data. Arrays store the data in an index starting at 0, where hashes collect a pair of information. 
  </p>
  <p> <img src="/images/ex_array.png"> </p>
  <p>
  The above picture has four examples of arrays. As you can see each array we give a name, array_1, array_2, array_3, and array_4. Many objects can be given a name in Ruby, what makes an array different is that we call it with brackets <span style="font-weight: bold;">[ ]</span>. Inside those brackets is our data. As you can see, arrays can store all sorts of data; we can store intergers, strings and even other arrays. Think of an array and its data as a numbered list that starts at <span style="font-weight: bold;">0</span>. The list starts at 0 and goes up incrementally. For example if we were to do <span style="font-weight: bold;">array_2(0)</span> we would get <span style="font-weight: bold; color: red;">"red"</span>. And if we call <span style="font-weight: bold;">array_2(2)</span> we get <span style="font-weight: bold; color: green;">"green"</span>. Do you see how call <span style="font-weight: bold;">0</span> returns the first item in the list, and how <span style="font-weight: bold;">2</span> returns the third item? 
  </p>
  <p>
  Now lets talk about hashes.
  </p>

  <img src="/images/ex_hash.png">
  
  <p>
  The picture above is a hash. Like arrays we can give them a name. Hashes are different because they use a curly bracket <span style="font-weight: bold;">{ }</span>. And just like arrays inside those brackets are our data. Like I said before, hashes collect a pair of information. The first part of information is called the <span style="font-weight: bold;">key</span>, and the second part of the pair is the <span style="font-weight: bold;">value</span>. There can only be one of any particular key, but they can be as many similar values. For example, in the hash above we can only have one key of "Name", but we can change all the values to be equaled to "Bob" <span style="font-weight: bold;">("Name" => "Bob", "Age" => "Bob", "Eye Color" => "Bob")</span>. When trying to retrieve a value, you will enter in the key. Again like the picture above, if we did <span style="font-weight: bold;">hash_1("Name")</span> it would return <span style="font-weight: bold;">"Bob"</span>
  </p>
  <p>
  You can use both arrays and hashes to collect and store you data. Both are very useful and you will pick one over the other depending on what you would like to do with you data.
  </p>
</div>